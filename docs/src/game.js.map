{"version":3,"file":"game.js","sourceRoot":"","sources":["../../src/game.ts"],"names":[],"mappings":";AAAA,MAAM,MAAM;IAAZ;QACI,WAAM,GAAqB,OAAO,CAAA;IACtC,CAAC;CAAA;AAID,MAAM,KAAK;IAIP,YAAa,IAAe;QAHpB,YAAO,GAAgB,SAAS,CAAA;QAItC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAA;IACnB,CAAC;IAED,WAAW;QACT,IAAI,CAAC,OAAO,GAAG,OAAO,CAAA;QACtB,OAAO,IAAI,CAAC,KAAK,KAAK,MAAM,CAAA;IAC9B,CAAC;IAED,SAAS;QACP,OAAO,IAAI,CAAC,OAAO,CAAA;IACrB,CAAC;IAED,OAAO;QACL,OAAO,IAAI,CAAC,KAAK,CAAA;IACnB,CAAC;CACJ;AAED,MAAM,SAAS;IAIX;QACE,MAAM,MAAM,GAAG,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC,EAAE,IAAI,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAA;QACvD,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAA;QAChC,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,CAAA;QAChC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA;IAC7C,CAAC;CACJ;AAED,MAAM,MAAM;IAAZ;QACI,kBAAa,GAAqB,IAAI,KAAK,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,SAAS,EAAE,CAAC,CAAA;IACzE,CAAC;CAAA;AAED,MAAM,IAAI;IAAV;QACI,WAAM,GAAW,IAAI,MAAM,EAAE,CAAA;QAC7B,eAAU,GAAkB,IAAI,KAAK,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,MAAM,EAAE,CAAC,CAAA;QAC5D,uBAAkB,GAAW,EAAE,CAAA;IACnC,CAAC;CAAA","sourcesContent":["class Player {\n    status: 'alive' | 'dead' = 'alive'\n}\n\ntype glassStatus = 'known' | 'unknown'\ntype glassType = 'hard' | 'normal'\nclass Glass {\n    private _status: glassStatus = 'unknown'\n    private _type: glassType\n\n    constructor (type: glassType) {\n      this._type = type\n    }\n\n    isHardGlass () : boolean {\n      this._status = 'known'\n      return this._type === 'hard'\n    }\n\n    getStatus () : glassStatus {\n      return this._status\n    }\n\n    getType (): glassType {\n      return this._type\n    }\n}\n\nclass GlassPair {\n    public _leftGlass\n    public _rightGlass\n\n    constructor () {\n      const glasss = [new Glass('hard'), new Glass('normal')]\n      const random = Math.random() % 2\n      this._leftGlass = glasss[random]\n      this._rightGlass = glasss[(random + 1) % 2]\n    }\n}\n\nclass Bridge {\n    glassPairList: Array<GlassPair> = new Array(16).fill(new GlassPair())\n}\n\nclass Game {\n    bridge: Bridge = new Bridge()\n    playerList: Array<Player> = new Array(16).fill(new Player())\n    _remainAlivePlayer: number = 16\n}\n"]}